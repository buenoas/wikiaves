###############
### PACOTES ###
###############

library(stringr)
library(stringi)
library(rgdal)


#############################################################
### Areas de observacao do WikiAves com lista de especies ###
#############################################################

url = "https://www.wikiaves.com.br/especies.php?&t=ao&ao="
ao = 1:9999

ao_com_lista = list()

for (i in ao) {
  
  url_ao = paste0(url, ao[i])
  
  webpage = readLines(url_ao)[550]
  
  ao_com_lista[[i]] = ifelse(webpage == "\t\t\t\t\t\t\t\t\t\t\t<a href=\"/wiki/aves\" class=\"m-nav__link\">", FALSE, TRUE)
  
  print(i)
  
}

ao_com_lista_df = data.frame(ao = ao,
                             lista = unlist(ao_com_lista))

ao_com_lista_vector = subset(ao_com_lista_df, lista == TRUE)$ao


#####################################################################
### Lista de area de observacao do WikiAves com lista de especies ###
#####################################################################

areas_observacao_list = list()

for (i in ao_com_lista_vector) {
  
  webpage = readLines(paste0(url, i))
  
  area_observacao = webpage[5]
  area_observacao = gsub("\t\t<title>Espécies Registradas em ", "", area_observacao)
  area_observacao = gsub(" \\| Wiki Aves - A Enciclopédia das Aves do Brasil</title>", "", area_observacao)
  
  areas_observacao_list[[i]] = area_observacao
  
  print(i)
  
}

areas_observacao = data.frame(nome = unlist(areas_observacao_list),
                              ao = ao_com_lista_vector)

head(areas_observacao)
tail(areas_observacao)

#write.csv(areas_observacao, "areas_observacao_wikiaves.csv", row.names = FALSE)


############################################################
### Lista de especies por area de observacao do WikiAves ###
############################################################

listas_aves = list()

for (i in ao_com_lista_vector) {
  
  webpage = readLines(paste0(url, i))[550]
  
  x1 = strsplit(webpage, "<script> lsp")[[1]][-1]
  
  especies = list()
  
  for (j in 1:length(x1)) {
    
    x2 = strsplit(x1[j], ",")[[1]]
    vetor_index = (length(x2)-4): length(x2)
    
    x3 = x2[vetor_index]
    x4 = gsub("); </script>", "", x3)
    x5 = gsub("'", "", x4)
    x6 = trimws(x5)
    
    especies[[j]] = x6
    
    print(j)
    
  }
  
  especies[[length(x1)]] = gsub("\t\t\t\t\t\t\t\t</tbody>", "", especies[[length(x1)]])
  
  especies_df = data.frame(do.call(rbind, especies))
  especies_df = especies_df[, c(1, 5, 4)]
  colnames(especies_df) = c("especie", "sons", "fotos")
  
  listas_aves[[i]] = especies_df
  
}

listas_aves = listas_aves[-which(sapply(listas_aves, is.null))]

names(listas_aves) = areas_observacao$nome

listas_aves_df = do.call(rbind, listas_aves)

listas_aves_df$nome_ao = gsub("\\.[0-9]+", "", rownames(listas_aves_df))
listas_aves_df$nome_ao = str_squish(listas_aves_df$nome_ao)
listas_aves_df$nome_ao = str_to_upper(listas_aves_df$nome_ao)
listas_aves_df$nome_ao = stri_trans_general(str = listas_aves_df$nome_ao,
                                            id = "Latin-ASCII")

listas_aves_df$sons = as.numeric(listas_aves_df$sons)
listas_aves_df$fotos = as.numeric(listas_aves_df$fotos)
listas_aves_df$registros = listas_aves_df$sons + listas_aves_df$fotos

rownames(listas_aves_df) = NULL

head(listas_aves_df)
dim(listas_aves_df)

# Organiza os dados
wikiaves = listas_aves_df
names(wikiaves)

wikiaves = wikiaves[, c(4, 1, 2, 3, 5)]
colnames(wikiaves)[1] = "area_observacao"
colnames(wikiaves)[5] = "total_registros"

head(wikiaves)

#write.csv(wikiaves, "wikiaves.csv", row.names = FALSE)

# Matriz de incidencia de aves em UCs
ucs_spp = tapply(listas_aves_df$registros,
                 list(listas_aves_df$nome_ao, listas_aves_df$especie),
                 sum)

ucs_spp[is.na(ucs_spp)] = 0
dim(ucs_spp)
ucs_spp[1:5,1:5]






####################################################
### Municipios do WikiAves com lista de especies ###
####################################################

start.time <- Sys.time()

url_municipios = "https://www.wikiaves.com.br/especies.php?t=c&c="

municipios_ibge = read.csv("https://raw.githubusercontent.com/buenoas/wikiaves/main/municipios_ibge.txt", sep = "\t")
codigos_ibge = municipios_ibge$CD_MUN


municipios_com_lista = list()

for (i in 1:length(codigos_ibge)) {
  
  url_mn = paste0(url_municipios, codigos_ibge[i])
  
  webpage = readLines(url_mn)[550]
  
  municipios_com_lista[[i]] = ifelse(webpage == "\t\t\t\t\t\t\t\t\t\t\t<a href=\"/wiki/aves\" class=\"m-nav__link\">", FALSE, TRUE)
  
  print(i)
  
}

municipios_com_lista_df = data.frame(codigos_ibge = codigos_ibge,
                                     lista = unlist(municipios_com_lista))

municipios_com_lista_vector = subset(municipios_com_lista_df, lista == TRUE)$codigos_ibge

end.time <- Sys.time()
time.taken1 <- round(end.time - start.time, 2)


#######################################
### Lista de especies por municipio ###
#######################################

start.time <- Sys.time()

listas_municipios = list()

for (i in municipios_com_lista_vector) {
  
  webpage = readLines(paste0(url_municipios, i))[550]
  
  x1 = strsplit(webpage, "<script> lsp")[[1]][-1]
  
  especies = list()
  
  for (j in 1:length(x1)) {
    
    x2 = strsplit(x1[j], ",")[[1]]
    vetor_index = (length(x2)-4): length(x2)
    
    x3 = x2[vetor_index]
    x4 = gsub("); </script>", "", x3)
    x5 = gsub("'", "", x4)
    x6 = trimws(x5)
    
    especies[[j]] = x6
    
    print(j)
    
  }
  
  especies[[length(x1)]] = gsub("\t\t\t\t\t\t\t\t</tbody>", "", especies[[length(x1)]])
  
  especies_df = data.frame(do.call(rbind, especies))
  especies_df = especies_df[, c(1, 5, 4)]
  colnames(especies_df) = c("especie", "sons", "fotos")
  
  listas_municipios[[i]] = especies_df
  
}

listas_municipios = listas_municipios[-which(sapply(listas_municipios, is.null))]

names(listas_municipios) = municipios_com_lista_vector

listas_municipios_df = do.call(rbind, listas_municipios)

listas_municipios_df$codigo_ibge = gsub("\\.[0-9]+", "", rownames(listas_municipios_df))

listas_municipios_df$sons = as.numeric(listas_municipios_df$sons)
listas_municipios_df$fotos = as.numeric(listas_municipios_df$fotos)
listas_municipios_df$total_registros = listas_municipios_df$sons + listas_municipios_df$fotos

rownames(listas_municipios_df) = NULL

# Reordena as colunas
listas_municipios_df = listas_municipios_df[, c(4, 1, 2, 3, 5)]

# Visualiza os dados
head(listas_municipios_df)
tail(listas_municipios_df)
dim(listas_municipios_df)

end.time <- Sys.time()
time.taken2 <- round(end.time - start.time, 2)

time.taken1; time.taken2


###############################################
### Adiciona informacao sobre os municipios ###
###############################################

# Reorganiza as colunas
listas_municipios_df = listas_municipios_df[, c(2, 3, 4, 5, 1)]

# Renomeia uma coluna
colnames(listas_municipios_df)[5] = "codigo_municipio"

# Adiciona o nome dos municipios
listas_municipios_df$nome_municipio = municipios_ibge$NM_MUN[match(listas_municipios_df$codigo_municipio,
                                                                   municipios_ibge$CD_MUN)]

# Adiciona o estado (UF)
listas_municipios_df$estado = municipios_ibge$SIGLA_UF[match(listas_municipios_df$codigo_municipio,
                                                             municipios_ibge$CD_MUN)]

# Adiciona a area do municipio
listas_municipios_df$area = municipios_ibge$AREA_KM2[match(listas_municipios_df$codigo_municipio,
                                                           municipios_ibge$CD_MUN)]

# Adiciona o longitude do centroide
listas_municipios_df$longitude_centroid = municipios_ibge$LONG_CENTROID[match(listas_municipios_df$codigo_municipio,
                                                                              municipios_ibge$CD_MUN)]

# Adiciona a latitude do centroide
listas_municipios_df$latitude_centroid = municipios_ibge$LAT_CENTROID[match(listas_municipios_df$codigo_municipio,
                                                                            municipios_ibge$CD_MUN)]

# Visualiza a tabela de dados
head(listas_municipios_df)
